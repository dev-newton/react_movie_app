{"version":3,"sources":["components/elements/Header/Header.jsx","config.js","components/elements/HeroImage/HeroImage.jsx","components/elements/SearchBar/SearchBar.jsx","components/elements/FourColGrid/FourColGrid.jsx","components/elements/MovieThumb/MovieThumb.jsx","components/elements/LoadMoreBtn/LoadMoreBtn.jsx","components/elements/Spinner/Spinner.jsx","components/Home/Home.jsx","components/elements/Navigation/Navigation.jsx","components/elements/MovieInfo/MovieInfo.jsx","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.jsx","components/elements/Actor/Actor.jsx","components/Movie/Movie.jsx","components/elements/NotFound/NotFound.jsx","components/App/App.jsx","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","e","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","catch","error","runtime","NotFound","App","Fragment","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4adab45.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"rmdb-header\">\n      <div className=\"rmdb-header-content\">\n        <Link to=\"/\">\n          <img\n            className=\"rmdb-logo\"\n            src=\"./images/reactMovie_logo.png\"\n            alt=\"rmdb-logo\"\n          />\n        </Link>\n        <img\n          className=\"rmdb-tmdb-logo\"\n          src=\"./images/tmdb_logo.png\"\n          alt=\"tmdb-logo\"\n        />\n      </div>\n    </div>\n  );\n};\n\n// class Header extends React.Component {\n//   state = {\n//     alphaValue: \"Oh yes, data from Alpha\",\n//     counter: 1\n//   };\n\n//   clickButton = () => {\n//     console.log(\"click\");\n//     console.log(this.state.counter);\n\n//     this.setState(previous => ({ counter: previous.counter + 1 }));\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <button onClick={this.clickButton}>Click Me</button>\n//         <Beta fromAlpha={this.state.alphaValue} />\n//       </div>\n//     );\n//   }\n// }\n\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from \"react\";\nimport \"./HeroImage.css\";\n\nconst HeroImage = props => {\n  return (\n    <div\n      className=\"rmdb-heroimage\"\n      style={{\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\n    39%,rgba(0,0,0,0)\n    41%,rgba(0,0,0,0.65)\n    100%),\n    url('${props.image}'), #1c1c1c`\n      }}\n    >\n      <div className=\"rmdb-heroimage-content\">\n        <div className=\"rmdb-heroimage-text\">\n          <h1>{props.title}</h1>\n          <p>{props.text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends Component {\n  state = {\n    value: \"\"\n  };\n\n  timeout = null;\n\n  doSearch = e => {\n    this.setState({\n      value: e.target.value\n    });\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      this.props.callback(this.state.value);\n    }, 500);\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-searchbar\">\n        <div className=\"rmdb-searchbar-content\">\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            placeholder=\"Search\"\n            onChange={this.doSearch}\n            value={this.state.value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./FourColGrid.css\";\n\nconst FourColGrid = props => {\n  const renderElements = () => {\n    const gridElements = props.children.map((element, i) => {\n      return (\n        <div key={i} className=\"rmdb-grid-element\">\n          {element}\n        </div>\n      );\n    });\n    return gridElements;\n  };\n  return (\n    <div className=\"rmdb-grid\">\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string.isRequired,\n  loading: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./MovieThumb.css\";\n\nconst MovieThumb = props => {\n  return (\n    <div className=\"rmdb-moviethumb\">\n      {props.clickable ? (\n        <Link\n          to={{\n            pathname: `/${props.movieId}`,\n            movieName: `${props.movieName}`\n          }}\n        >\n          <img src={props.image} alt=\"moviethumb\" />\n        </Link>\n      ) : (\n        <img src={props.image} alt=\"moviethumb\" />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string\n};\n\nexport default MovieThumb;\n","import React from \"react\";\nimport \"./LoadMoreBtn.css\";\n\nconst LoadMoreBtn = props => {\n  return (\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\n      <p>{props.text}</p>\n    </div>\n  );\n};\n\nexport default LoadMoreBtn;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return <div className=\"loader\"></div>;\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport {\n  API_KEY,\n  API_URL,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from \"../../config\";\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\"\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"HomeState\")) {\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = searchTerm => {\n    console.log(searchTerm);\n    let endpoint = \"\";\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n\n    this.fetchItems(endpoint);\n  };\n\n  loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({ loading: true });\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\n        .state.currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&langusge=en-US&query=${\n        this.state.searchTerm\n      }&page=${this.state.currentPage + 1}`;\n    }\n\n    this.fetchItems(endpoint);\n  };\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result =>\n        this.setState(\n          {\n            movies: [...this.state.movies, ...result.results],\n            heroImage: this.state.heroImage || result.results[6],\n            loading: false,\n            currentPage: result.page,\n            totalPages: result.total_pages\n          },\n          () => {\n            if (this.state.searchTerm === \"\") {\n              localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n            }\n          }\n        )\n      );\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-home\">\n        {this.state.heroImage ? (\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\n              title={this.state.heroImage.original_title}\n              text={this.state.heroImage.overview}\n            />\n            <SearchBar callback={this.searchItems} />\n          </div>\n        ) : null}\n\n        <div className=\"rmdb-home-grid\">\n          <FourColGrid\n            header={this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\n            loading={this.state.loading}\n          >\n            {this.state.movies.map((element, i) => {\n              return (\n                <MovieThumb\n                  key={i}\n                  clickable={true}\n                  image={\n                    element.poster_path\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\n                      : \"./images/no_image.jpg\"\n                  }\n                  movieId={element.id}\n                  movieName={element.original_title}\n                />\n              );\n            })}\n          </FourColGrid>\n          {this.state.loading ? <Spinner /> : null}\n          {this.state.currentPage <= this.state.totalPages &&\n          !this.state.loading ? (\n            <LoadMoreBtn onClick={this.loadMoreItems} text=\"Load More\" />\n          ) : null}\n          {console.log(this.state.currentPage)}\n          {console.log(this.state.totalPages)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nconst Navigation = props => {\n  return (\n    <div className=\"rmdb-navigation\">\n      <div className=\"rmdb-navigation-content\">\n        <Link to=\"/\">\n          <p>Home</p>\n        </Link>\n        <p>/</p>\n        <p>{props.movie}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieInfo.css\";\n\nconst MovieInfo = props => {\n  return (\n    <div\n      className=\"rmdb-movieinfo\"\n      style={{\n        background: props.movie.backdrop_path\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\n          : \"#000\"\n      }}\n    >\n      <div className=\"rmdb-movieinfo-content\">\n        <div className=\"rmdb-movieinfo-thumb\">\n          <MovieThumb\n            image={\n              props.movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\n                : \"./images/no_image.jpg\"\n            }\n            clickable={false}\n          />\n        </div>\n        <div className=\"rmdb-movieinfo-text\">\n          <h1>{props.movie.title}</h1>\n          <h3>PLOT</h3>\n          <p>{props.movie.overview}</p>\n          <h3>IMDB RATING</h3>\n          <div className=\"rmdn-rating\">\n            <meter\n              min=\"0\"\n              max=\"100\"\n              optimum=\"100\"\n              low=\"40\"\n              high=\"70\"\n              value={props.movie.vote_average * 10}\n            ></meter>\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n          </div>\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n          {props.directors.map((element, i) => {\n            return (\n              <p key={i} className=\"rmdb-director\">\n                {element.name}\n              </p>\n            );\n          })}\n          <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport { calcTime, convertMoney } from \"../../../helpers.js\";\nimport \"./MovieInfoBar.css\";\n\nconst MovieInfoBar = props => {\n  return (\n    <div className=\"rmdb-movieinfobar\">\n      <div className=\"rmdb-movieinfobar-content\">\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Running time: {calcTime(props.time)}\n          </span>\n        </div>\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Budget: {convertMoney(props.budget)}\n          </span>\n        </div>\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Revenue: {convertMoney(props.revenue)}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfoBar;\n","import React from \"react\";\nimport { IMAGE_BASE_URL } from \"../../../config\";\n\nimport \"./Actor.css\";\n\nconst Actor = props => {\n  const POSTER_SIZE = \"w154\";\n  return (\n    <div className=\"rmdb-actor\">\n      <img\n        src={\n          props.actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\n            : \"./images/no_image.jpg\"\n        }\n        alt=\"actorthumb\"\n      />\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\n    </div>\n  );\n};\n\nexport default Actor;\n","import React, { Component } from \"react\";\nimport { API_KEY, API_URL } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\n      const state = JSON.parse(\n        localStorage.getItem(`${this.props.match.params.movieId}`)\n      );\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      // First fetch the movie\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        if (result.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState(\n            {\n              movie: result\n            },\n            () => {\n              //....then fetch actors in the setstae callback function\n              const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n              fetch(endpoint)\n                .then(result => result.json())\n                .then(result => {\n                  const directors = result.crew.filter(\n                    member => member.job === \"Director\"\n                  );\n                  this.setState(\n                    {\n                      actors: result.cast,\n                      directors,\n                      loading: false\n                    },\n                    () => {\n                      localStorage.setItem(\n                        `${this.props.match.params.movieId}`,\n                        JSON.stringify(this.state)\n                      );\n                    }\n                  );\n                });\n            }\n          );\n        }\n      })\n      .catch(error => console.log(\"Error:\", error));\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-movie\">\n        {this.state.movie ? (\n          <div>\n            <Navigation movie={this.state.movie.title} />\n            <MovieInfo\n              movie={this.state.movie}\n              directors={this.state.directors}\n            />\n            <MovieInfoBar\n              time={this.state.movie.runtime}\n              budget={this.state.movie.budget}\n              revenue={this.state.movie.revenue}\n            />\n          </div>\n        ) : null}\n        {this.state.actors ? (\n          <div className=\"rmdb-movie-grid\">\n            <FourColGrid header={\"Actors\"}>\n              {this.state.actors.map((element, i) => {\n                return <Actor key={i} actor={element} />;\n              })}\n            </FourColGrid>\n          </div>\n        ) : null}\n        {!this.state.actors && !this.state.loading ? (\n          <h1>No Movie Found</h1>\n        ) : null}\n        {this.state.loading ? <Spinner /> : null}\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Whooops. This page doesn't exist</h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"../elements/Header/Header\";\nimport Home from \"../Home/Home\";\nimport Movie from \"../Movie/Movie\";\nimport NotFound from \"../elements/NotFound/NotFound\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/:movieId\" component={Movie} />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}