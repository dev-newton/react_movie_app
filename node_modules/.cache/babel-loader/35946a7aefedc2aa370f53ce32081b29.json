{"ast":null,"code":"import _defineProperty from \"/Users/devnewton/Desktop/react-movie/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/devnewton/Desktop/react-movie/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/devnewton/Desktop/react-movie/src/components/Home/Home.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React, { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport { API_KEY, API_URL, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Home.css\"; // class Home extends Component {\n//   state = {\n//     movies: [],\n//     heroImage: null,\n//     loading: false,\n//     currentPage: 0,\n//     totalPages: 0,\n//     searchTerm: \"\"\n//   };\n\nconst Home = () => {\n  const _useState = useState({\n    movies: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsloading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isError = _useState6[0],\n        setIsError = _useState6[1];\n\n  const fetchMovies = async createEndpoint => {\n    setIsError(false);\n    setIsloading(true); // we can use URL searchParams to get URL params. very handy\n\n    const params = new URLSearchParams(createEndpoint);\n\n    if (!params.get(\"page\")) {\n      setState(prev => _objectSpread({}, prev, {\n        movies: [],\n        searchTerm: params.get(\"query\")\n      }));\n    }\n\n    try {\n      const result = await (await fetch(createEndpoint)).json();\n      setState(prev => _objectSpread({}, prev, {\n        movies: [...prev.movies, ...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (e) {\n      setIsError(true);\n    }\n\n    setIsloading(false);\n  }; // componentDidMount() {\n  //   if (localStorage.getItem(\"HomeState\")) {\n  //     const state = JSON.parse(localStorage.getItem(\"HomeState\"));\n  //     this.setState({ ...state });\n  //   } else {\n  //     this.setState({ loading: true });\n  //     // const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n  //     this.fetchItems(this.createEndpoint(\"movie/popular\", false, \"\"));\n  //   }\n  // }\n\n\n  const createEndpoint = (type, loadMore, searchTerm) => {\n    return \"\".concat(API_URL).concat(type, \"?api_key=\").concat(API_KEY, \"&page=\").concat(loadMore && this.state.currentPage + 1, \"&query=\").concat(searchTerm);\n  };\n\n  const updateItems = (loadMore, searchTerm) => {\n    tsetState({\n      movies: loadMore ? [...state.movies] : [],\n      loading: true,\n      searchTerm: loadMore ? state.searchTerm : searchTerm\n    }, () => {\n      fetchMovies(!state.searchTerm ? createEndpoint(\"movie/popular\", loadMore, \"\") : createEndpoint(\"search/movie\", loadMore, state.searchTerm));\n    });\n  }; // const searchItems = searchTerm => {\n  //   let endpoint = \"\";\n  //   // this.setState({\n  //   //   movies: [],\n  //   //   loading: true,\n  //   //   searchTerm\n  //   // });\n  //   if (!searchTerm) {\n  //     endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n  //   } else {\n  //     endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n  //   }\n  //   this.fetchMovies(endpoint);\n  // };\n  // loadMoreItems = () => {\n  //   let endpoint = \"\";\n  //   // this.setState({ loading: true });\n  //   if (!this.state.searchTerm) {\n  //     endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\n  //       .state.currentPage + 1}`;\n  //   } else {\n  //     endpoint = `${API_URL}search/movie?api_key=${API_KEY}&langusge=en-US&query=${\n  //       this.state.searchTerm\n  //     }&page=${this.state.currentPage + 1}`;\n  //   }\n  //   this.fetchMovies(endpoint);\n  // };\n  // fetchItems = async endpoint => {\n  //   const result = await (await fetch(endpoint)).json();\n  //   try {\n  //     this.setState(\n  //       {\n  //         movies: [...this.state.movies, ...result.results],\n  //         heroImage: this.state.heroImage || result.results[6],\n  //         loading: false,\n  //         currentPage: result.page,\n  //         totalPages: result.total_pages\n  //       },\n  //       () => {\n  //         if (this.state.searchTerm === \"\") {\n  //           localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n  //         }\n  //       }\n  //     );\n  //   } catch (e) {\n  //     console.log(\"There was an error:\", e);\n  //   }\n  // };\n  // fetchItems = endpoint => {\n  //   fetch(endpoint)\n  //     .then(result => result.json())\n  //     .then(result =>\n  //       this.setState(\n  //         {\n  //           movies: [...this.state.movies, ...result.results],\n  //           heroImage: this.state.heroImage || result.results[6],\n  //           loading: false,\n  //           currentPage: result.page,\n  //           totalPages: result.total_pages\n  //         },\n  //         () => {\n  //           if (this.state.searchTerm === \"\") {\n  //             localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n  //           }\n  //         }\n  //       )\n  //     );\n  // };\n\n\n  return (// ES6 desctructuring the state\n    React.createElement(\"div\", {\n      className: \"rmdb-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, state.heroImage && !state.searchTerm ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(HeroImage, {\n      image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(state.heroImage.backdrop_path),\n      title: state.heroImage.original_title,\n      text: state.heroImage.overview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })) : null, React.createElement(SearchBar, {\n      callback: updateItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rmdb-home-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: state.searchTerm ? \"Search Result\" : \"Popular Movies\",\n      loading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, state.movies.map((element, i) => {\n      return React.createElement(MovieThumb, {\n        key: i,\n        clickable: true,\n        image: element.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(element.poster_path) : \"./images/no_image.jpg\",\n        movieId: element.id,\n        movieName: element.original_title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      });\n    })), isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }) : null, state.currentPage < state.totalPages && !isLoading ? React.createElement(LoadMoreBtn, {\n      onClick: updateItems,\n      text: \"Load More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }) : null))\n  );\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/devnewton/Desktop/react-movie/src/components/Home/Home.jsx"],"names":["React","useState","useEffect","API_KEY","API_URL","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","Home","movies","state","setState","isLoading","setIsloading","isError","setIsError","fetchMovies","createEndpoint","params","URLSearchParams","get","prev","searchTerm","result","fetch","json","results","heroImage","currentPage","page","totalPages","total_pages","e","type","loadMore","updateItems","tsetState","loading","backdrop_path","original_title","overview","map","element","i","poster_path","id"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  API_KEY,\n  API_URL,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from \"../../config\";\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Home.css\";\n\n// class Home extends Component {\n//   state = {\n//     movies: [],\n//     heroImage: null,\n//     loading: false,\n//     currentPage: 0,\n//     totalPages: 0,\n//     searchTerm: \"\"\n//   };\n\nconst Home = () => {\n  const [state, setState] = useState({ movies: [] });\n  const [isLoading, setIsloading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const fetchMovies = async createEndpoint => {\n    setIsError(false);\n    setIsloading(true);\n\n    // we can use URL searchParams to get URL params. very handy\n    const params = new URLSearchParams(createEndpoint);\n    if (!params.get(\"page\")) {\n      setState(prev => ({\n        ...prev,\n        movies: [],\n        searchTerm: params.get(\"query\")\n      }));\n    }\n\n    try {\n      const result = await (await fetch(createEndpoint)).json();\n      setState(prev => ({\n        ...prev,\n        movies: [...prev.movies, ...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (e) {\n      setIsError(true);\n    }\n    setIsloading(false);\n  };\n\n  // componentDidMount() {\n  //   if (localStorage.getItem(\"HomeState\")) {\n  //     const state = JSON.parse(localStorage.getItem(\"HomeState\"));\n  //     this.setState({ ...state });\n  //   } else {\n  //     this.setState({ loading: true });\n  //     // const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n  //     this.fetchItems(this.createEndpoint(\"movie/popular\", false, \"\"));\n  //   }\n  // }\n\n  const createEndpoint = (type, loadMore, searchTerm) => {\n    return `${API_URL}${type}?api_key=${API_KEY}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n  };\n\n  const updateItems = (loadMore, searchTerm) => {\n    tsetState(\n      {\n        movies: loadMore ? [...state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? state.searchTerm : searchTerm\n      },\n      () => {\n        fetchMovies(\n          !state.searchTerm\n            ? createEndpoint(\"movie/popular\", loadMore, \"\")\n            : createEndpoint(\"search/movie\", loadMore, state.searchTerm)\n        );\n      }\n    );\n  };\n\n  // const searchItems = searchTerm => {\n  //   let endpoint = \"\";\n  //   // this.setState({\n  //   //   movies: [],\n  //   //   loading: true,\n  //   //   searchTerm\n  //   // });\n\n  //   if (!searchTerm) {\n  //     endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n  //   } else {\n  //     endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n  //   }\n\n  //   this.fetchMovies(endpoint);\n  // };\n\n  // loadMoreItems = () => {\n  //   let endpoint = \"\";\n  //   // this.setState({ loading: true });\n  //   if (!this.state.searchTerm) {\n  //     endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\n  //       .state.currentPage + 1}`;\n  //   } else {\n  //     endpoint = `${API_URL}search/movie?api_key=${API_KEY}&langusge=en-US&query=${\n  //       this.state.searchTerm\n  //     }&page=${this.state.currentPage + 1}`;\n  //   }\n\n  //   this.fetchMovies(endpoint);\n  // };\n\n  // fetchItems = async endpoint => {\n  //   const result = await (await fetch(endpoint)).json();\n  //   try {\n  //     this.setState(\n  //       {\n  //         movies: [...this.state.movies, ...result.results],\n  //         heroImage: this.state.heroImage || result.results[6],\n  //         loading: false,\n  //         currentPage: result.page,\n  //         totalPages: result.total_pages\n  //       },\n  //       () => {\n  //         if (this.state.searchTerm === \"\") {\n  //           localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n  //         }\n  //       }\n  //     );\n  //   } catch (e) {\n  //     console.log(\"There was an error:\", e);\n  //   }\n  // };\n\n  // fetchItems = endpoint => {\n  //   fetch(endpoint)\n  //     .then(result => result.json())\n  //     .then(result =>\n  //       this.setState(\n  //         {\n  //           movies: [...this.state.movies, ...result.results],\n  //           heroImage: this.state.heroImage || result.results[6],\n  //           loading: false,\n  //           currentPage: result.page,\n  //           totalPages: result.total_pages\n  //         },\n  //         () => {\n  //           if (this.state.searchTerm === \"\") {\n  //             localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n  //           }\n  //         }\n  //       )\n  //     );\n  // };\n\n  return (\n    // ES6 desctructuring the state\n    <div className=\"rmdb-home\">\n      {state.heroImage && !state.searchTerm ? (\n        <div>\n          <HeroImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.heroImage.backdrop_path}`}\n            title={state.heroImage.original_title}\n            text={state.heroImage.overview}\n          />\n        </div>\n      ) : null}\n      <SearchBar callback={updateItems} />\n      <div className=\"rmdb-home-grid\">\n        <FourColGrid\n          header={state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\n          loading={isLoading}\n        >\n          {state.movies.map((element, i) => {\n            return (\n              <MovieThumb\n                key={i}\n                clickable={true}\n                image={\n                  element.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\n                    : \"./images/no_image.jpg\"\n                }\n                movieId={element.id}\n                movieName={element.original_title}\n              />\n            );\n          })}\n        </FourColGrid>\n        {isLoading ? <Spinner /> : null}\n        {state.currentPage < state.totalPages && !isLoading ? (\n          <LoadMoreBtn onClick={updateItems} text=\"Load More\" />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}