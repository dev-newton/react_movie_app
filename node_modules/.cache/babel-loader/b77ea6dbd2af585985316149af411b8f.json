{"ast":null,"code":"var _jsxFileName = \"/Users/devnewton/Desktop/react-movie/src/components/elements/MovieInfo/MovieInfo.jsx\";\nimport React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieInfo.css\";\n\nconst MovieInfo = props => {\n  return React.createElement(\"div\", {\n    className: \"rmdb-movieinfo\",\n    style: {\n      background: props.movie.backdrop_path ? \"url('\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(props.movie.backdrop_path, \"')\") : \"#000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-thumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(MovieThumb, {\n    image: props.movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(props.movie.poster_path) : \"./images/no_image.jpg\",\n    clickable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.movie.title), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"PLOT\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.movie.overview), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"IMDB RATING\"), React.createElement(\"div\", {\n    className: \"rmdn-rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"100\",\n    optimum: \"100\",\n    low: \"40\",\n    high: \"70\",\n    value: props.movie.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"rmdb-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.movie.vote_average)), props.directors.length > 1 ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"DIRECTORS\") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"DIRECTOR\"), props.directors.map((element, i) => {\n    return React.createElement(\"p\", {\n      key: i,\n      className: \"rmdb-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, element.name);\n  }), React.createElement(FontAwesome, {\n    className: \"fa-film\",\n    name: \"film\",\n    size: \"5x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/devnewton/Desktop/react-movie/src/components/elements/MovieInfo/MovieInfo.jsx"],"names":["React","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","FontAwesome","MovieThumb","MovieInfo","props","background","movie","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","element","i","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,aAAtC,QAA2D,iBAA3D;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,SACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAED,KAAK,CAACE,KAAN,CAAYC,aAAZ,kBACAT,cADA,SACiBE,aADjB,SACiCI,KAAK,CAACE,KAAN,CAAYC,aAD7C,UAER;AAHC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EACHH,KAAK,CAACE,KAAN,CAAYE,WAAZ,aACOV,cADP,SACwBC,WADxB,SACsCK,KAAK,CAACE,KAAN,CAAYE,WADlD,IAEI,uBAJR;AAME,IAAA,SAAS,EAAE,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACE,KAAN,CAAYG,KAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACE,KAAN,CAAYI,QAAhB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAC,GADN;AAEE,IAAA,GAAG,EAAC,KAFN;AAGE,IAAA,OAAO,EAAC,KAHV;AAIE,IAAA,GAAG,EAAC,IAJN;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,KAAK,EAAEN,KAAK,CAACE,KAAN,CAAYK,YAAZ,GAA2B,EANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACE,KAAN,CAAYK,YAAvC,CATF,CALF,EAgBGP,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA7B,GAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBrD,EAiBGT,KAAK,CAACQ,SAAN,CAAgBE,GAAhB,CAAoB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACnC,WACE;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAW,MAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,CAACE,IADX,CADF;AAKD,GANA,CAjBH,EAwBE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,SAAvB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,IAAI,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CAXF,CARF,CADF;AAiDD,CAlDD;;AAoDA,eAAed,SAAf","sourcesContent":["import React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieInfo.css\";\n\nconst MovieInfo = props => {\n  return (\n    <div\n      className=\"rmdb-movieinfo\"\n      style={{\n        background: props.movie.backdrop_path\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\n          : \"#000\"\n      }}\n    >\n      <div className=\"rmdb-movieinfo-content\">\n        <div className=\"rmdb-movieinfo-thumb\">\n          <MovieThumb\n            image={\n              props.movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\n                : \"./images/no_image.jpg\"\n            }\n            clickable={false}\n          />\n        </div>\n        <div className=\"rmdb-movieinfo-text\">\n          <h1>{props.movie.title}</h1>\n          <h3>PLOT</h3>\n          <p>{props.movie.overview}</p>\n          <h3>IMDB RATING</h3>\n          <div className=\"rmdn-rating\">\n            <meter\n              min=\"0\"\n              max=\"100\"\n              optimum=\"100\"\n              low=\"40\"\n              high=\"70\"\n              value={props.movie.vote_average * 10}\n            ></meter>\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n          </div>\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n          {props.directors.map((element, i) => {\n            return (\n              <p key={i} className=\"rmdb-director\">\n                {element.name}\n              </p>\n            );\n          })}\n          <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}